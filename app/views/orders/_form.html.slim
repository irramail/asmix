= form_for @order do |f|
  - if @order.errors.any?
    #error_explanation
      h2 = "#{pluralize(@order.errors.count, "error")} prohibited this order from being saved:"
      ul
        - @order.errors.full_messages.each do |message|
          li = message

  /Do you like SHIT?
  - periods = ""
  - (1..Device.all.size).each { |x| periods += Device.find(x).market.period.to_s + ',' }
  | <script>var periods=[
  = "#{periods[0..-2]}"
  | ];</script>

  - worktimes = ""
  - (1..Device.all.size).each { |x| worktimes += '1'+(Device.find(x).market.worktime_broadcastings.first.start + ',1' + Device.find(x).market.worktime_broadcastings.first.stop).gsub(/:/, ',1') + ',' }
  | <script>var worktimes=[
  = "#{worktimes[0..-2]}"
  | ];</script>

  .field.col-md-12
    .actions = f.submit t('orders.save'), class: "btn btn-primary pull-right"
    .col-md-3.pull-right

    .col-md-3.pull-right


  .field.col-md-12
    .col-md-3
      = f.label t('orders.name')
      = f.text_field :name

    .col-md-2
      = f.label t('orders.status')
      / but Disabled doing not sending status in params, set in controller after Order.new in create
      = f.collection_select :status_id, Status.all, :id, :name, {}, { disabled: true }

    .col-md-5
      = f.label :sun
      = f.check_box :sun, {checked: true}

      = f.label :mon
      = f.check_box :mon, {checked: true}

      = f.label :tue
      = f.check_box :tue, {checked: true}

      = f.label :wed
      = f.check_box :wed, {checked: true}

      = f.label :thu
      = f.check_box :thu, {checked: true}

      = f.label :fri
      = f.check_box :fri, {checked: true}

      = f.label :sat
      = f.check_box :sat, {checked: true}
  .field.col-md-6.padt20
    .col-md-12.padb20
      button.btn.btn-danger.pull-right id="cleanAllFiles" = t('orders.clean_files')
    = f.label t('orders.contents')
    = collection_select :contents, :content_id, Mediafile.where(:content_id => 2).all + Mediafile.where(:content_id => 4).all, :id, :filename, {}, {:multiple => true}
    /= f.label :plist_ids
    - collection_files = {}
    - if @old_order.present?
      - array = []
      - @old_order.suborders.each { |suborder| suborder.plists.each { |plist| array << plist.mediafile} }
      - collection_files = array.uniq.flat_map { |i| i }
    = collection_select :plist_ids, :plist_id, collection_files, :id, :filename, {}, {:multiple => true}

  .field.col-md-6.padt20
    .col-md-12.padb20
      button.btn.btn-danger.pull-right id="cleanAllDevices" = t('orders.clean_devices')
    = f.label t('orders.devices')
    = collection_select :devices, :device_id, Device.all, :id, :name, {}, {:multiple => true}

    /= f.label :device_ids
    - collection_devices = {}
    - if @old_order.present?
      - collection_devices = Device.where(id: Suborder.where(order: @old_order.id).pluck(:device_id))
    = collection_select :device_ids, :device_id, collection_devices, :id, :name, {}, {:multiple => true}

  .field.col-md-12
    = f.label t('orders.periods')
    = collection_select :periods, :period_id, Period.all, :id, :name

  .field hidden="hidden"
    /= f.label :startdt
    = datetime_select :startdatetime, :startdt, { :minute_step => 5, :default => {:hour => '00', :minute => '00'} }
    /= f.label :stopdt
    = datetime_select :stopdatetime, :stopdt, :minute_step => 5, default: Time.now.utc.change(hour:23, min: 55)+1.months

    /= f.label :startt
    = time_select :starttime, :startt, :default => {:hour => '00', :minute => '00'}
    /= f.label :stopt
    = time_select :stoptime, :stopt, :default => {:hour => '23', :minute => '59'}

  table.table.table-striped.table-hover.col-md-12 id="suborders_list"
    thead
      tr
        th = t('orders.id_device')
        th = t('orders.device')
        th = t('orders.period')
        th = t('orders.start_date')
        th = t('orders.stop_date')
        th = t('orders.start_time')
        th = t('orders.stop_time')
        th = t('orders.files')
    tbody id="suborders_body"
      -if @old_order.present?
        - if @old_order.suborders.present?
          - @old_order.suborders.each do |suborder|
            tr  id="line4divice#{suborder.device.id}"
              td
                = suborder.device.id
                input name="suborders[#{suborder.device.id}][device_id]" type="hidden" value="#{suborder.device.id}"
              td = suborder.device.name
              td = collection_select "suborders[#{suborder.device.id}]", 'period_id', Period.all, :id, :name, selected: suborder.period.value
              td = datetime_select "suborders[#{suborder.device.id}]", 'startdt', default: suborder.startdt
              td = datetime_select "suborders[#{suborder.device.id}]", 'stopdt', default: suborder.stopdt
              td = time_select "suborders[#{suborder.device.id}]", 'startt', default: suborder.startt
              td = time_select "suborders[#{suborder.device.id}]", 'stopt', default: suborder.stopt
              td = collection_select :select, "files4device#{suborder.device.id}", Mediafile.where(id: Plist.where(suborder: suborder.id).pluck(:mediafile_id)), :id, :filename, {}, { multiple: true, class: "files4device", name: "suborders[#{suborder.device.id}][files][]"}

/p#notice = notice

- @device.volumes.each do |volume|
  - if volume.errors.any?
    #error_explanation
      h2 = "#{pluralize(volume.errors.count, "error")} prohibited this content from being saved:"
      ul
        - volume.errors.full_messages.each do |message|
          li = message


.col-md-6
  p
    strong = "#{t('devices.thead.market')}:"
    = @device.market.name
    strong = "-> #{t('devices.device')}:"
    = "#{@device.id} - #{@device.name}"
    - status = 'completed'
    - status = @device.tasks.where(typeoftask_id: 3).first.typeofstatus.name.downcase
    = image_tag('online.png', hspace: '10') if (Time.now.utc - @device.updated_at < @device.ping + 5)
    = link_to '', {:controller => "tasks", :action => "index", :device_id => @device.id }, :method => "get", class: "btn img-status status-#{status}", title: t('nav.tasks')
    = link_to '', {:controller => "tasks", :action => "index", :device_id => @device.id }, :method => "get", class: "glyphicon glyphicon-list btn btn-md btn-default pull-right", title: t('nav.tasks')

  h2 = t('devices.volumes')

  - if @device.volumes.count > 0
    /table.table.table-striped.col-md-12.table-hover.table-condensed.table-bordered
    /  thead
    /    tr
    /      th = t('devices.thead.description')
    /      th = t('devices.thead.name')
    /      th = t('devices.thead.volume')
    /      th [colspan="1"]
    /  tbody
    == render 'volumes/volume'

  /h2 = t('devices.add_new_volume')
  /== render 'volumes/form'

p.col-md-6
  p
    strong = "#{t('devices.thead.version')}:"
    = @device.version
    - status = 'completed'
    - status = @device.tasks.where(typeoftask_id: 7).first.typeofstatus.name.downcase
    = link_to '', {:controller => "tasks", :action => "index", :device_id => @device.id }, :method => "get", class: "btn img-status status-#{status}", title: t('nav.tasks')
  p
    strong = "#{t('devices.thead.ping')}:"
    = @device.ping
  p
    strong = "#{t('devices.thead.tzdate')}:"
    = @device.tzdate
  p
    strong = "#{t('devices.thead.sn')}:"
    = @device.sn
  p
    strong = "#{t('devices.thead.active')}:"
    = check_box 'Active', 'Active', checked: @device.active, :disabled => true, :readonly => true
  p
    strong = "#{t('devices.thead.equalizer')}:"
    = " #{@device.eq0}:#{@device.eq1}:#{@device.eq2}:#{@device.eq3}:#{@device.eq4}:#{@device.eq5}:#{@device.eq6}:#{@device.eq7}:#{@device.eq8}:#{@device.eq9}"
  p
    strong = "#{t('devices.thead.comment')}:"
    = @device.comment

.col-md-12
  = link_to t('std.edit'), edit_device_path(@device)
  '|
  = link_to t('std.back'), devices_path
